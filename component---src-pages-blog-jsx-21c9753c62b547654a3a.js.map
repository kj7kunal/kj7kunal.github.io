{"version":3,"sources":["webpack:///./src/components/section/index.jsx","webpack:///./src/components/summary-item/index.jsx","webpack:///./src/pages/404.jsx","webpack:///./src/components/blog-posts/index.jsx","webpack:///./src/pages/blog.jsx"],"names":["classes","Section","title","link","children","linkContent","to","className","SummaryItem","name","description","internal","href","NotFoundPage","BlogPosts","posts","map","post","key","node","fields","slug","frontmatter","Index","data","allMarkdownRemark","edges","noBlog","length","metadata","site","siteMetadata"],"mappings":"6FAAA,qCAGMA,EACK,sBADLA,EAEG,qCAFHA,EAIF,oFAJEA,EAKK,gEALLA,EAME,sCAqBOC,IAlBC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAc,kBAAC,OAAD,CAAMC,GAAIH,GAAOD,GAEnC,OACE,yBAAKK,UAAWP,GACd,yBAAKO,UAAWP,GACd,wBAAIO,UAAcP,EAAL,KACXG,EAAOH,EAAe,KAGrBG,EAAOE,EAAcH,IAG1B,yBAAKK,UAAWP,GAAkBI,M,kCCzBxC,qCAGMJ,EACK,OADLA,EAEE,mCAFFA,EAGS,mCAyBAQ,IAtBK,SAAC,GAA2D,IAC1EH,EADiBI,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,YAAkD,IAArCP,YAAqC,aAAvBQ,SAQtD,OALEN,OAH2E,SAG7D,kBAAC,OAAD,CAAMC,GAAIH,GAAOM,GAEjB,uBAAGG,KAAMT,GAAOM,GAI9B,yBAAKF,UAAWP,GACd,wBACEO,UAAcP,EAAL,KACPG,EAAO,sCAAwC,KAGhDA,EAAOE,EAAcI,GAExB,uBAAGF,UAAWP,GAAsBU,M,kCC1B1C,oEAMMV,EACG,oBADHA,EAEE,YAiBOa,UAdM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKX,MAAM,cACX,wBAAIK,UAAWP,GAAf,kBACA,sEAC2C,IACzC,kBAAC,OAAD,CAAMO,UAAWP,EAAcM,GAAG,KAAlC,oBAFF,Q,4FCMWQ,EAhBG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,kBAAC,IAAD,CAASb,MAAM,kBACZa,EAAMC,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CACEC,IAAKD,EAAKE,KAAKC,OAAOC,KACtBZ,KAAMQ,EAAKE,KAAKG,YAAYpB,MAC5BQ,YAAaO,EAAKE,KAAKG,YAAYZ,YACnCP,KAAMc,EAAKE,KAAKC,OAAOC,KACvBV,UAAQ,S,gDCYHY,UAjBD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACTT,EAAQS,EAAKC,kBAAkBC,MAC/BC,GAAUZ,IAAUA,EAAMa,OAEhC,OAAKb,GAAUA,EAAMa,OAKnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK1B,MAAM,SACX,kBAAC,IAAD,CAAQ2B,SAAUL,EAAKM,KAAKC,gBAC1BJ,GAAU,kBAAC,EAAD,CAAWZ,MAAOA,KAPzB,kBAAC,UAAD","file":"component---src-pages-blog-jsx-21c9753c62b547654a3a.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\n\nconst classes = {\n  wrapper: 'block pt-12 md:flex',\n  title: 'pb-6 md:w-full md:max-w-150 md:p-0',\n  heading:\n    'font-xs font-light tracking-widest text-sm text-gray-600 leading-normal uppercase',\n  content: 'flex-none text-lg text-gray-600 font-light md:flex-1 md:pl-20',\n  link: 'hover:underline hover:text-blue-500',\n};\n\nconst Section = ({ title, link, children }) => {\n  let linkContent = <Link to={link}>{title}</Link>;\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.title}>\n        <h2 className={`${classes.heading} ${\n          link ? classes.link : ''\n        }`}\n        >\n          {link ? linkContent : title}\n        </h2>\n      </div>\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst classes = {\n  wrapper: 'mb-6',\n  name: 'font-semibold text-gray-900 pb-1',\n  description: 'text-md text-gray-600 font-light',\n};\n\nconst SummaryItem = ({ name, description, link = false, internal = false }) => {\n  let linkContent;\n  if (internal) {\n    linkContent = <Link to={link}>{name}</Link>;\n  } else {\n    linkContent = <a href={link}>{name}</a>;\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <h3\n        className={`${classes.name} ${\n          link ? 'hover:underline hover:text-blue-500' : ''\n        }`}\n      >\n        {link ? linkContent : name}\n      </h3>\n      <p className={classes.description}>{description}</p>\n    </div>\n  );\n};\n\nexport default SummaryItem;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst classes = {\n  title: 'text-lg font-bold',\n  link: 'underline',\n};\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"Not found\" />\n    <h1 className={classes.title}>404: Not Found</h1>\n    <p>\n      You just hit a route that doesn't exist.{' '}\n      <Link className={classes.link} to=\"/\">\n        Return to safety\n      </Link>\n      .\n    </p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst BlogPosts = ({ posts }) => {\n  return (\n    <Section title=\"All Blog Posts\">\n      {posts.map((post) => (\n        <SummaryItem\n          key={post.node.fields.slug}\n          name={post.node.frontmatter.title}\n          description={post.node.frontmatter.description}\n          link={post.node.fields.slug}\n          internal\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default BlogPosts;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport BlogPosts from '../components/blog-posts';\nimport Header from '../components/header';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport NotFound from '../pages/404';\n\nconst Index = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const noBlog = !posts || !posts.length;\n\n  if (!posts || !posts.length) {\n    return <NotFound />;\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Header metadata={data.site.siteMetadata} />\n      {!noBlog && <BlogPosts posts={posts} />}\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        name\n        title\n        description\n        about\n        author\n        github\n        linkedin\n        resume\n        mail\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}